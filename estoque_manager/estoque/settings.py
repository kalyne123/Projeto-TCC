"""
Django settings for estoque project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # Define o diretório base do projeto

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4v8&tc4ucs&m_4g(mn28t_1md^-iay_3nvt#maypab(+3y=qgt'  # Chave secreta usada para fornecer segurança

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Ativar o modo de depuração (deve ser False em produção)

ALLOWED_HOSTS = []  # Lista de hosts permitidos (defina em produção)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # App do admin do Django
    'django.contrib.auth',  # App de autenticação
    'django.contrib.contenttypes',  # App para tipos de conteúdo
    'django.contrib.sessions',  # App de gerenciamento de sessões
    'django.contrib.messages',  # App de mensagens
    'django.contrib.staticfiles',  # App para arquivos estáticos
    'gerenciamento',  # Sua aplicação personalizada
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Middleware de segurança
    'django.contrib.sessions.middleware.SessionMiddleware',  # Middleware para gerenciamento de sessões
    'django.middleware.common.CommonMiddleware',  # Middleware comum
    'django.middleware.csrf.CsrfViewMiddleware',  # Middleware para proteção contra CSRF
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Middleware de autenticação
    'django.contrib.messages.middleware.MessageMiddleware',  # Middleware de mensagens
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Middleware de proteção contra clickjacking
]

ROOT_URLCONF = 'estoque.urls'  # Arquivo de configuração de URLs do projeto

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Backend do Django para templates
        'DIRS': [BASE_DIR / 'estoque' / 'templates'],  # Diretórios adicionais de templates (pode ser preenchido se necessário)
        'APP_DIRS': True,  # Permite que o Django busque templates nas pastas das apps
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # Contexto para debug
                'django.template.context_processors.request',  # Contexto para requisições
                'django.contrib.auth.context_processors.auth',  # Contexto para autenticação
                'django.contrib.messages.context_processors.messages',  # Contexto para mensagens
            ],
        },
    },
]

WSGI_APPLICATION = 'estoque.wsgi.application'  # Configuração para WSGI

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # Motor do banco de dados (MySQL)
        'NAME': 'GERENCIADOR_ESTOQUE',  # Nome do banco de dados
        'USER': 'root',  # Nome de usuário do banco de dados
        'PASSWORD': '1234',  # Senha do banco de dados
        'HOST': '127.0.0.1',  # Endereço do host do banco de dados
        'PORT': '3306',  # Porta do banco de dados
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # Valida similaridade de atributos do usuário
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # Valida o comprimento mínimo da senha
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # Valida senhas comuns
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # Valida senhas numéricas
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'  # Código do idioma padrão

TIME_ZONE = 'UTC'  # Fuso horário padrão

USE_I18N = True  # Ativa a internacionalização

USE_TZ = True  # Ativa o uso de fuso horário

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'  # URL base para arquivos estáticos

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Tipo de campo de chave primária padrão

# Redirecionar para a página inicial após login
LOGIN_REDIRECT_URL = 'home'  # URL de redirecionamento após login

# Redirecionar para a página inicial após logout
LOGOUT_REDIRECT_URL = 'home'  # URL de redirecionamento após logout

# Para permitir acesso a URLs específicas apenas para usuários autenticados
LOGIN_URL = 'login'  # URL da página de login

# Configuração do modelo de usuário personalizado
AUTH_USER_MODEL = 'gerenciamento.Usuario'  # Define o modelo de usuário personalizado
